#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass dcsbook
\use_default_options true
\begin_modules
dcs
\end_modules
\maintain_unincluded_children false
\language polish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Wstęp
\end_layout

\begin_layout Quote
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Programming is intrinsically very difficult.
\end_layout

\end_inset


\end_layout

\begin_layout Quote
\align right
--- E.
 Dijkstra
\end_layout

\begin_layout Standard
Tworzenie aplikacji działających w klastrze jest złożone i wiąże się z nim
 wiele problemów takich jak wykrycie zakończenia czy dystrybucja danych
 pomiędzy maszynami.
 Dużo prostsze jest tworzenie aplikacji wykorzystujących wiele procesorów
 i rdzeni pojedynczej maszyny.
 W niniejszej pracy zaproponowano rozwiązanie czerpiące z obu podejść, pozwalają
ce zastosować mechanizmy znane z programowania równoległego przy tworzeniu
 aplikacji rozproszonych.
\end_layout

\begin_layout Standard
W tym rozdziale przedstawione zostaną założony cel oraz zakres pracy, jej
 struktura, motywacja oraz podział prac pomiędzy autorów.
\end_layout

\begin_layout Section
Cel i zakres pracy
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:intro-cel-i-zakres"

\end_inset

Celem pracy było zaprojektowanie biblioteki, która, bez skomplikowanej konfigura
cji czy instalowania wielu składników, pozwoli jej użytkownikom, programistom,
 w prosty sposób zaimplementować program przetwarzający dane w sposób rozproszon
y.
 Programista pisząc program w sposób podobny do tego w jaki pisałby program
 równoległy, powinien uzyskać program wykorzystujący moc obliczeniową wielu
 węzłów w klastrze.
 W takim przypadku wątki, zamiast wykonywać się na wielu rdzeniach jednego
 procesora, mogą wykonywać się na zdalnych maszynach.
\end_layout

\begin_layout Section
Struktura pracy
\end_layout

\begin_layout Standard
W niniejszej pracy omówiono koncepcję oraz implementację biblioteki o kodowej
 nazwie Bluepath.
 Bieżący rozdział opisuje w dalszej części motywacje oraz wkład członków
 zespołu.
 Rozdział drugi stanowi wstęp teoretyczny obejmujący definicje oraz przegląd
 istniejących rozwiązań -- środowisk przetwarzania rozproszonego.
 W
\begin_inset space ~
\end_inset

rozdziale trzecim została szczegółowo przedstawiona koncepcja i projekt
 systemu, a
\begin_inset space ~
\end_inset

rozdział czwarty opisuje implementacje poszczególnych komponentów.
 Przykładowe zastosowania biblioteki przy implementowaniu aplikacji obliczeniowy
ch przedstawia rozdział piąty, a wyniki testów jakościowych, wydajnościowych
 i ich analizę -- rozdział szósty.
 W rodziale siódmym podsumowano przebieg realizacji, opisano napotkane problemy
 a także zaproponowano obszary, w których możnaby kontynuować prace nad
 usprawnieniem biblioteki.
\end_layout

\begin_layout Section
Motywacja
\end_layout

\begin_layout Standard
W czasie, kiedy rozpoczynano pracę nie było dostępne popularne, aktywnie
 rozwijane i wspierane komercyjnie środowisko do przetwarzania rozproszonego
 dla .NET Framework (por.
 punkt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:background-Istniejące-rozwiązania"

\end_inset

).
 Tego typu środowisko pozwoliłoby użytkownikom uniknąć konieczności samodzielneg
o rozwiązywania wielu problemów przetwarzania rozproszonego oraz zaoszczędzić
 czas poprzez wykorzystanie dostarczonych mechanizmów.
\end_layout

\begin_layout Section
Udział w pracy poszczególnych członków zespołu
\end_layout

\begin_layout Standard
Niniejsza praca została stworzona przez dwie osoby.
 Podział prac został przedstawiony poniżej.
\end_layout

\begin_layout Paragraph
Piotr Bazydło
\end_layout

\begin_layout Itemize
koncepcja rozwiązania,
\end_layout

\begin_layout Itemize
przegląd i analiza mechanizmów pamięci współdzielonej,
\end_layout

\begin_layout Itemize
przykładowe aplikacje -- DLINQ, system uzupełniania wyrazów,
\end_layout

\begin_layout Itemize
implementacja części testów jakościowych i wydajnościowych,
\end_layout

\begin_layout Itemize
przygotowanie środowiska do przeprowadzenia testów wydajnościowych,
\end_layout

\begin_layout Itemize
implementacja zamków rozproszonych,
\end_layout

\begin_layout Itemize
implementacja planisty szeregującego zadania w oparciu o obciążenie węzłów,
\end_layout

\begin_layout Itemize
implementacja planisty szeregującego zadania wykorzystującego algorytm cykliczny
,
\end_layout

\begin_layout Itemize
implementacja pamięci rozproszonej na bazie istniejącego rozwiązania,
\end_layout

\begin_layout Itemize
implementacja rozproszonych struktur danych i obiektów.
\end_layout

\begin_layout Paragraph
Zachariusz Karwacki
\end_layout

\begin_layout Itemize
przegląd istniejących rozwiązań,
\end_layout

\begin_layout Itemize
koncepcja rozwiązania,
\end_layout

\begin_layout Itemize
implementacja logiki wątku rozproszonego,
\end_layout

\begin_layout Itemize
implementacja zdalnego wykonawcy,
\end_layout

\begin_layout Itemize
implementacja lokalnego wykonawcy,
\end_layout

\begin_layout Itemize
implementacja mechanizmów logowania zdarzeń,
\end_layout

\begin_layout Itemize
implementacja usługi odnajdywania węzłów,
\end_layout

\begin_layout Itemize
implementacja zarządcy połączeń,
\end_layout

\begin_layout Itemize
implementacja interfejsu do komunikacji z systemem,
\end_layout

\begin_layout Itemize
implementacja części testów jakościowych i wydajnościowych,
\end_layout

\begin_layout Itemize
przykładowe aplikacje -- MapReduce, obliczanie liczby PI,
\end_layout

\begin_layout Itemize
stworzenie skryptów dystrybuujących aplikację w klastrze.
\end_layout

\end_body
\end_document
