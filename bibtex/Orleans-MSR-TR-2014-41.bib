@TechReport {export:210931,
abstract     = {<p>High-scale interactive services demand high throughput with low latency and
                high availability, difficult goals to meet with the traditional stateless 3-tier
                architecture. The actor model makes it natural to build a stateful middle tier
                and achieve the required performance. However, the popular actor model platforms
                still pass many distributed systems problems to the developers.

                The Orleans programming model introduces the novel abstraction of virtual actors
                that solves a number of the complex distributed systems problems, such as
                reliability and distributed resource management, liberating the developers from
                dealing with those concerns. At the same time, the Orleans runtime enables
                applications to attain high performance, reliability and scalability.

                This paper presents the design principles behind Orleans and demonstrates how
                Orleans achieves a simple programming model that meets these goals. We describe
                how Orleans simplified the development of several scalable production
                applications on Windows Azure, and report on the performance of those production
                systems.</p>},
author       = {Philip A. Bernstein and Sergey Bykov and Alan Geller and Gabriel Kliot and Jorgen
                Thelin},
month        = {March},
number       = {MSR-TR-2014-41},
title        = {Orleans: Distributed Virtual Actors for Programmability and Scalability},
url          = {http://research.microsoft.com/apps/pubs/default.aspx?id=210931},
year         = {2014},
}
